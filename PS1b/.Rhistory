r2 <- ""
}
if(fit == 'smooth')
{
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + geom_smooth() + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
} else if(fit == 'linear') {
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + geom_smooth(method = 'lm') + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
} else {
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
}
}
#setwd("~/Dropbox/Berkeley_tings/Fall 2018/ARE213/Problem Sets/PS1")
setwd("C:\\Users\\will-\\Desktop\\are213\\PS1b")
setwd("~/Dropbox/Berkeley_tings/Fall 2018/ARE213/Problem Sets/SharedFiles/are213/PS1b")
#setwd("C:\\Users\\will-\\Desktop\\are213\\PS1b")
#setwd("C:\\Users\\Will\\Desktop\\are213\\PS1b")
dat <- read.dta("ps1.dta")
#fix missing data
dat_drop <- dat %>% filter(herpes != 8 & tobacco != 9 & cigar != 99 & cigar6 != 6 &
alcohol != 9 & drink != 99 & drink5 != 5 & wgain != 99)
dat_drop$tobacco_p <- ifelse(dat_drop$tobacco == 2, 0, dat_drop$tobacco)
dat_drop$dmage2 <- dat_drop$dmage^2
dat_drop$cigar2 <- dat_drop$cigar^2
dat_drop$cigar3 <- dat_drop$cigar^3
dat_drop$cig_dmag <- dat_drop$cigar*dat_drop$dmage
lm.out <- lm(dbrwt ~ stresfip+dmage+ormoth+mrace3+dmeduc+dmar+adequacy+dfage+
orfath+dfeduc+dtotord+monpre+nprevist+disllb+birmon+dgestat+csex+dplural+
anemia+diabetes+herpes+chyper+
preterm+tobacco_p+cigar+alcohol+dmage2+cigar2+cigar3+cig_dmag, data = dat_drop)
summary(lm.out)
## add nick's spline code
# Find knots based on equal quantiles of data
nknots <- 3
knots <- attr(bs(dat_drop$dbrwt, df = nknots+3), "knots")
rm(list = ls())
library(pacman)
p_load("foreign","dplyr","magrittr","knitr","ggplot2", "corrplot", "stargazer", "glmnet","splines")
theme_plot <- theme(
legend.position = "right",
panel.background = element_rect(fill = NA),
panel.border = element_rect(fill = NA, color = "grey75"),
axis.ticks = element_line(color = "grey85"),
panel.grid.major = element_line(color = "grey95", size = 0.2),
panel.grid.minor = element_line(color = "grey95", size = 0.2),
legend.key = element_blank(),
legend.title = element_blank(),
legend.spacing.x = unit(0.3, "cm"))
ggscat <- function(x = NA,
y,
fit = 'linear', # options: 'linear', 'smooth', NA
title = '',
ylab = '',
xlab = '',
R2 = TRUE,
equation = FALSE,
alpha = 0.4){
require(ggplot2)
theme_plot <- theme(
legend.position = "bottom",
panel.background = element_rect(fill = NA),
panel.border = element_rect(fill = NA, color = "grey75"),
axis.ticks = element_line(color = "grey85"),
panel.grid.major = element_line(color = "grey95", size = 0.2),
panel.grid.minor = element_line(color = "grey95", size = 0.2),
legend.key = element_blank())
if(length(x) == 1){
if(is.na(x)){
x = 1:length(y)
}
}
df <- as.data.frame(x = x, y = y)
if(R2 == TRUE){
r2 <- paste("R2 =",round(summary(lm(y~x))$r.squared,3))
} else{
r2 <- ""
}
if(fit == 'smooth')
{
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + geom_smooth() + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
} else if(fit == 'linear') {
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + geom_smooth(method = 'lm') + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
} else {
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
}
}
setwd("~/Dropbox/Berkeley_tings/Fall 2018/ARE213/Problem Sets/SharedFiles/are213/PS1b")
#setwd("C:\\Users\\will-\\Desktop\\are213\\PS1b")
#setwd("C:\\Users\\Will\\Desktop\\are213\\PS1b")
dat <- read.dta("ps1.dta")
#fix missing data
dat_drop <- dat %>% filter(herpes != 8 & tobacco != 9 & cigar != 99 & cigar6 != 6 &
alcohol != 9 & drink != 99 & drink5 != 5 & wgain != 99)
dat_drop$tobacco_p <- ifelse(dat_drop$tobacco == 2, 0, dat_drop$tobacco)
dat_drop$dmage2 <- dat_drop$dmage^2
dat_drop$cigar2 <- dat_drop$cigar^2
dat_drop$cigar3 <- dat_drop$cigar^3
dat_drop$cig_dmag <- dat_drop$cigar*dat_drop$dmage
lm.out <- lm(dbrwt ~ stresfip+dmage+ormoth+mrace3+dmeduc+dmar+adequacy+dfage+
orfath+dfeduc+dtotord+monpre+nprevist+disllb+birmon+dgestat+csex+dplural+
anemia+diabetes+herpes+chyper+
preterm+tobacco_p+cigar+alcohol+dmage2+cigar2+cigar3+cig_dmag, data = dat_drop)
summary(lm.out)
## add nick's spline code
# Find knots based on equal quantiles of data
nknots <- 3
knots <- attr(bs(dat_drop$dbrwt, df = nknots+3), "knots")
cspline.mod <- lm(dbrwt ~ bs(stresfip,knots = knots)+bs(dmage,knots = knots)+bs(ormoth,knots = knots)+bs(mrace3,knots = knots)+bs(dmeduc,knots = knots)+bs(dmar,knots = knots)+bs(adequacy,knots = knots)+bs(dtotord,knots = knots)+bs(monpre,knots = knots)+bs(nprevist,knots = knots)+bs(disllb,knots = knots)+bs(birmon,knots = knots)+bs(dgestat,knots = knots)+bs(csex,knots = knots)+bs(dplural,knots = knots)+bs(anemia,knots = knots)+bs(diabetes,knots = knots)+bs(herpes,knots = knots)+bs(chyper,knots = knots)+bs(pre4000,knots = knots)+bs(preterm,knots = knots)+bs(tobacco,knots = knots)+bs(cigar,knots = knots)+bs(alcohol,knots = knots)+bs(drink,knots = knots)+bs(wgain,knots = knots), data = dat_drop)
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
setwd("~/Dropbox/Berkeley_tings/Fall 2018/ARE213/Problem Sets/SharedFiles/are213/PS1b")
#setwd("C:\\Users\\will-\\Desktop\\are213\\PS1b")
#setwd("C:\\Users\\Will\\Desktop\\are213\\PS1b")
dat <- read.dta("ps1.dta")
#fix missing data
dat_drop <- dat %>% filter(herpes != 8 & tobacco != 9 & cigar != 99 & cigar6 != 6 &
alcohol != 9 & drink != 99 & drink5 != 5 & wgain != 99)
dat_drop$tobacco_p <- ifelse(dat_drop$tobacco == 2, 0, dat_drop$tobacco)
#Linear Model for reference
dat.mod <- dat_drop %>% select(dbrwt,stresfip,dmage,ormoth,mrace3,dmeduc,dmar,adequacy,
dtotord,monpre,nprevist,disllb,birmon,dgestat,csex,dplural,
anemia,diabetes,herpes,chyper,pre4000,
preterm,tobacco,cigar,alcohol,drink,wgain)
lm.mod <- lm(dbrwt ~., data = dat.mod)
summary(lm.mod)
setwd("~/Dropbox/Berkeley_tings/Fall 2018/ARE213/Problem Sets/SharedFiles/are213/PS1b")
#setwd("C:\\Users\\will-\\Desktop\\are213\\PS1b")
#setwd("C:\\Users\\Will\\Desktop\\are213\\PS1b")
dat <- read.dta("ps1.dta")
#fix missing data
dat_drop <- dat %>% filter(herpes != 8 & tobacco != 9 & cigar != 99 & cigar6 != 6 &
alcohol != 9 & drink != 99 & drink5 != 5 & wgain != 99)
dat_drop$tobacco_p <- ifelse(dat_drop$tobacco == 2, 0, dat_drop$tobacco)
#Linear Model for reference
dat.mod <- dat_drop %>% select(dbrwt,stresfip,dmage,ormoth,mrace3,dmeduc,dmar,adequacy,
dtotord,monpre,nprevist,disllb,birmon,dgestat,csex,dplural,
anemia,diabetes,herpes,chyper,pre4000,
preterm,tobacco,cigar,alcohol,drink,wgain)
lm.mod <- lm(dbrwt ~., data = dat.mod)
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y = poly.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Polynomial Regression", fit = "smooth", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y =cspline.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title =  paste0("Predicted vs. Observed Birthweight - Cubic Spline (",nknots," equal quantile knots)"), fit = "smooth", alpha = 0.3) + geom_vline(knots)
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y =cspline.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title =  paste0("Predicted vs. Observed Birthweight - Cubic Spline (",nknots," equal quantile knots)"), fit = "smooth", alpha = 0.3) + geom_vline(xintercept = knots)
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y =cspline.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title =  paste0("Predicted vs. Observed Birthweight - Cubic Spline (",nknots," equal quantile knots)"), fit = "smooth", alpha = 0.3) + geom_vline(xintercept = knots, linetype = "dashed")
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y =cspline.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title =  paste0("Predicted vs. Observed Birthweight - Cubic Spline (",nknots," equal quantile knots)"), fit = "smooth", alpha = 0.3) + geom_vline(xintercept = knots, linetype = "dashed", color = "grey80")
#Number of Control Obs
nC <- length(D[D==0])
n <- nrow(dat_drop)
y <- dat_drop$dbrwt
D <- dat_drop$tobacco
#Number of Control Obs
nC <- length(D[D==0])
nT <- length(D[D==1])
par(mfrow = c(3,2))
for(adj in c(0.1,0.25,0.5,1,2,10)){
# Define Bandwidth
h0 <- density(y)$bw
bw_adjust <- adj
h <- h0*bw_adjust
# Control & Treatment Densities
Cdens <- density(y[D==0], adjust = bw_adjust)
Tdens <- density(y[D==1], adjust = bw_adjust)
#Plot densities
plot(Cdens, col = "blue", main = paste0("Bandwidth = ",round(h,2),"g"), xlab = "grams")
lines(Tdens, col = "red")
legend('topright', legend = c("Control", "Treated"), col = c("blue", "red"), lty = 1)
}
adj
# Define Bandwidth
h0 <- density(y)$bw
bw_adjust <- adj
h <- h0*bw_adjust
# Control & Treatment Densities
Cdens <- density(y[D==0], adjust = bw_adjust)
y[D==0]
denisty(y)$bw
density(y)$bw
treatment <- density(dat_drop$dbrwt[dat_drop$tobacco_p==1], kernel = "gaussian",
weights = dat_drop$p.hat_2[dat_drop$tobacco_p==1]/
sum(dat_drop$p.hat_2[dat_drop$tobacco_p==1]))
n <- nrow(dat_drop)
y <- dat_drop$dbrwt
D <- dat_drop$tobacco_p
#Number of Control Obs
nC <- length(D[D==0])
nT <- length(D[D==1])
par(mfrow = c(3,2))
for(adj in c(0.1,0.25,0.5,1,2,10)){
# Define Bandwidth
h0 <- density(y)$bw
bw_adjust <- adj
h <- h0*bw_adjust
# Control & Treatment Densities
Cdens <- density(y[D==0], adjust = bw_adjust)
Tdens <- density(y[D==1], adjust = bw_adjust)
#Plot densities
plot(Cdens, col = "blue", main = paste0("Bandwidth = ",round(h,2),"g"), xlab = "grams")
lines(Tdens, col = "red")
legend('topright', legend = c("Control", "Treated"), col = c("blue", "red"), lty = 1)
}
h0 <- density(y)$bw
bw_adjust <- 1
h <- h0*bw_adjust
# Control & Treatment Densities
Cdens <- density(y[D==0], adjust = bw_adjust)
Tdens <- density(y[D==1], adjust = bw_adjust)
#Plot densities
plot(Cdens, col = "blue", main = paste0("Kernal Densities of Birthweight (Bandwidth = ",round(h,2),"g)"), xlab = "grams")
lines(Tdens, col = "red")
legend('topright', legend = c("Control", "Treated"), col = c("blue", "red"), lty = 1)
# Uniform kernal function
k.uni <- function(u){
return(ifelse(abs(u) <= 1,0.5,0))
}
# Triangular kernal function
k.tri <- function(u){
return(ifelse(abs(u) < 1,1-abs(u),0))
}
# Epanechnikov kernal function
k.epan <- function(u){
return(ifelse(abs(u) < 1,0.75*(1-u^2),0))
}
# Gaussian kernal function
k.gauss <- function(u){
return((1/sqrt(2*pi))*exp(-0.5*u^2))
}
# Kernal Density Estimator for Control Group
k.dens.C <- function(ystar, k.func){
ks <- rep(NA,nC)
for(i in 1:n){
u <- (ystar - y[i])/h
ks[i] <- k.func(u)
}
return((1/(nC*h))*(sum(ks)))
}
# Kernal Density Estimator for Treatment Group
k.dens.T <- function(ystar, k.func){
ks <- rep(NA,nT)
for(i in 1:n){
u <- (ystar - y[i])/h
ks[i] <- k.func(u)*(1-D[i])/(1-pX[i])
}
return((1/(nT*h))*(sum(ks)))
}
h <- density(y)$bw
est.uni.C <- k.dens.C(3000,k.func = k.uni) %>% round(6)
est.tri.C <- k.dens.C(3000,k.func = k.tri) %>% round(6)
est.epan.C <- k.dens.C(3000,k.func = k.epan) %>% round(6)
est.gauss.C <- k.dens.C(3000,k.func = k.gauss) %>% round(6)
est.uni.T <- k.dens.T(3000,k.func = k.uni) %>% round(6)
x_lasso <- dat_drop %>%
select(stresfip,dmage,ormoth,mrace3,dmeduc,dmar,adequacy,dfage,
orfath,dfeduc,dtotord,monpre,nprevist,disllb,birmon,dgestat,csex,dplural,
anemia,diabetes,herpes,chyper,
preterm,cigar,alcohol,dmage2,cigar2,cigar3,cig_dmag) %>% as.matrix()
rm(list = ls())
library(pacman)
p_load("foreign","dplyr","magrittr","knitr","ggplot2", "corrplot", "stargazer", "glmnet","splines")
theme_plot <- theme(
legend.position = "right",
panel.background = element_rect(fill = NA),
panel.border = element_rect(fill = NA, color = "grey75"),
axis.ticks = element_line(color = "grey85"),
panel.grid.major = element_line(color = "grey95", size = 0.2),
panel.grid.minor = element_line(color = "grey95", size = 0.2),
legend.key = element_blank(),
legend.title = element_blank(),
legend.spacing.x = unit(0.3, "cm"))
ggscat <- function(x = NA,
y,
fit = 'linear', # options: 'linear', 'smooth', NA
title = '',
ylab = '',
xlab = '',
R2 = TRUE,
equation = FALSE,
alpha = 0.4){
require(ggplot2)
theme_plot <- theme(
legend.position = "bottom",
panel.background = element_rect(fill = NA),
panel.border = element_rect(fill = NA, color = "grey75"),
axis.ticks = element_line(color = "grey85"),
panel.grid.major = element_line(color = "grey95", size = 0.2),
panel.grid.minor = element_line(color = "grey95", size = 0.2),
legend.key = element_blank())
if(length(x) == 1){
if(is.na(x)){
x = 1:length(y)
}
}
df <- as.data.frame(x = x, y = y)
if(R2 == TRUE){
r2 <- paste("R2 =",round(summary(lm(y~x))$r.squared,3))
} else{
r2 <- ""
}
if(fit == 'smooth')
{
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + geom_smooth() + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
} else if(fit == 'linear') {
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + geom_smooth(method = 'lm') + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
} else {
ggplot(df, aes(x, y)) + ggtitle(title) + ylab(ylab) + xlab(xlab) + geom_point(alpha = alpha, stroke = 0, size = 2) + ylim(min(y, na.rm = T), 1.05*max(y, na.rm = T)) + theme_plot + annotate("text", x = 0.9*max(x,na.rm = T), y = 1.05*max(y,na.rm=T), label = r2, colour="black", size = 4)
}
}
setwd("~/Dropbox/Berkeley_tings/Fall 2018/ARE213/Problem Sets/SharedFiles/are213/PS1b")
#setwd("C:\\Users\\will-\\Desktop\\are213\\PS1b")
#setwd("C:\\Users\\Will\\Desktop\\are213\\PS1b")
dat <- read.dta("ps1.dta")
#fix missing data
dat_drop <- dat %>% filter(herpes != 8 & tobacco != 9 & cigar != 99 & cigar6 != 6 &
alcohol != 9 & drink != 99 & drink5 != 5 & wgain != 99)
dat_drop$tobacco_p <- ifelse(dat_drop$tobacco == 2, 0, dat_drop$tobacco)
#Linear Model for reference
dat.mod <- dat_drop %>% select(dbrwt,stresfip,dmage,ormoth,mrace3,dmeduc,dmar,adequacy,
dtotord,monpre,nprevist,disllb,birmon,dgestat,csex,dplural,
anemia,diabetes,herpes,chyper,pre4000,
preterm,tobacco,cigar,alcohol,drink,wgain)
lm.mod <- lm(dbrwt ~., data = dat.mod)
dat_drop$dmage2 <- dat_drop$dmage^2
dat_drop$cigar2 <- dat_drop$cigar^2
dat_drop$cigar3 <- dat_drop$cigar^3
dat_drop$cig_dmag <- dat_drop$cigar*dat_drop$dmage
lm.out <- lm(dbrwt ~ stresfip+dmage+ormoth+mrace3+dmeduc+dmar+adequacy+dfage+
orfath+dfeduc+dtotord+monpre+nprevist+disllb+birmon+dgestat+csex+dplural+
anemia+diabetes+herpes+chyper+
preterm+tobacco_p+cigar+alcohol+dmage2+cigar2+cigar3+cig_dmag, data = dat_drop)
summary(lm.out)
## add nick's spline code
# Find knots based on equal quantiles of data
nknots <- 3
knots <- attr(bs(dat_drop$dbrwt, df = nknots+3), "knots")
cspline.mod <- lm(dbrwt ~ bs(stresfip,knots = knots)+bs(dmage,knots = knots)+bs(ormoth,knots = knots)+bs(mrace3,knots = knots)+bs(dmeduc,knots = knots)+bs(dmar,knots = knots)+bs(adequacy,knots = knots)+bs(dtotord,knots = knots)+bs(monpre,knots = knots)+bs(nprevist,knots = knots)+bs(disllb,knots = knots)+bs(birmon,knots = knots)+bs(dgestat,knots = knots)+bs(csex,knots = knots)+bs(dplural,knots = knots)+bs(anemia,knots = knots)+bs(diabetes,knots = knots)+bs(herpes,knots = knots)+bs(chyper,knots = knots)+bs(pre4000,knots = knots)+bs(preterm,knots = knots)+bs(tobacco,knots = knots)+bs(cigar,knots = knots)+bs(alcohol,knots = knots)+bs(drink,knots = knots)+bs(wgain,knots = knots), data = dat_drop)
ggscat(x = dat_drop$dbrwt, y = lm.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title = "Predicted vs. Observed Birthweight - Linear Regression", fit = "linear", alpha = 0.3)
ggscat(x = dat_drop$dbrwt, y =cspline.mod$fitted.values, ylab = "Predicted Birthweight (grams)", xlab = "Observed Birthweight (grams)", title =  paste0("Predicted vs. Observed Birthweight - Cubic Spline (",nknots," equal quantile knots)"), fit = "smooth", alpha = 0.3) + geom_vline(xintercept = knots, linetype = "dashed", color = "grey80")
x_lasso <- dat_drop %>%
select(stresfip,dmage,ormoth,mrace3,dmeduc,dmar,adequacy,dfage,
orfath,dfeduc,dtotord,monpre,nprevist,disllb,birmon,dgestat,csex,dplural,
anemia,diabetes,herpes,chyper,
preterm,cigar,alcohol,dmage2,cigar2,cigar3,cig_dmag) %>% as.matrix()
y_lasso <- dat_drop %>% select(dbrwt) %>% as.matrix()
d_lasso <- dat_drop %>% select(tobacco_p) %>% as.matrix()
fit <- cv.glmnet(x_lasso,d_lasso)
coef(fit, s = "lambda.1se")
fit2 <- cv.glmnet(x_lasso,y_lasso)
coef(fit2, s = "lambda.1se")
lm.out <- lm(dbrwt ~ dmage+ormoth+mrace3+dmeduc+dmar+
orfath+dfeduc+dtotord+nprevist+disllb+dgestat+csex+dplural+diabetes+chyper+
preterm+tobacco_p+cigar+alcohol+cigar3+cig_dmag, data = dat_drop)
summary(lm.out)
Pcontrols = 'dmage+ ormoth+ mrace3+ dmeduc+ dmar+ dfage+
orfath+ dfeduc + disllb + isllb10 + anemia + diabetes+ herpes+ phyper'
# estimate propensity score
all_p <- glm( as.formula(paste( 'tobacco_p ~ ', Pcontrols)),
dat_drop, family = binomial(logit))
summary(all_p)
dat_drop$p.hat_all <- predict(glm( as.formula(paste( 'tobacco_p ~ ', Pcontrols)),
dat_drop, family = binomial(logit)),
type = "response") # this is important!
Pcontrols2 = 'dmage+ ormoth+ mrace3+ dmeduc+ dmar+
dfage+ orfath+ dfeduc + disllb + isllb10 + phyper'
dat_drop$p.hat_2 <- predict(glm( as.formula(paste( 'tobacco_p ~ ', Pcontrols2)),
dat_drop, family = binomial(logit)),
type = "response") # this is important!
dat_drop$diff <- dat_drop$p.hat_all - dat_drop$p.hat_2
summary(dat_drop$diff)
ggscat(dat_drop$p.hat_all,dat_drop$p.hat_2, xlab = "Prop. Scores w/ all Predetermined Vars", ylab = "Prop. Scores w/o Insignificant Predetermined Vars", title = "Propensity Score Comparison when Excluding Non-Significant Variables")
#Controlling for propensity scores
reg4 <- lm(dbrwt ~ tobacco_p + p.hat_2, data = dat_drop)
summary(reg4)
ATE <- (sum(dat_drop$tobacco_p*dat_drop$dbrwt/dat_drop$p.hat_2)/
sum(dat_drop$tobacco_p/dat_drop$p.hat_2)) -
(sum((1 - dat_drop$tobacco_p)*dat_drop$dbrwt/(1 - dat_drop$p.hat_2))/
sum((1 - dat_drop$tobacco_p) /(1 - dat_drop$p.hat_2)) )
print(ATE)
TOT <- ( sum(dat_drop$tobacco_p*dat_drop$dbrwt)/sum(dat_drop$tobacco_p)) -
sum(dat_drop$p.hat_2 *(1 - dat_drop$tobacco_p)*dat_drop$dbrwt / (1 - dat_drop$p.hat_2) ) /
sum(dat_drop$p.hat_2 * (1 - dat_drop$tobacco_p) /
(1 - dat_drop$p.hat_2))
print(TOT)
treatment <- density(dat_drop$dbrwt[dat_drop$tobacco_p==1], kernel = "gaussian",
weights = dat_drop$p.hat_2[dat_drop$tobacco_p==1]/
sum(dat_drop$p.hat_2[dat_drop$tobacco_p==1]))
control <- density(dat_drop$dbrwt[dat_drop$tobacco_p==0], kernel = "gaussian",
weights = (1 - dat_drop$p.hat_2[dat_drop$tobacco_p==0])/
sum((1 - dat_drop$p.hat_2[dat_drop$tobacco_p==0])))
plot(treatment,
lty = 'dashed',
main = "",
xlab = "Birthweight in grams",
ylab = "Density")
lines(control)
legend(x = 'topleft', legend = c('Everyone Smoker', 'Everyone Non-Smoker'),
lty = c('dashed', 'solid'), bty = "n")
n <- nrow(dat_drop)
y <- dat_drop$dbrwt
D <- dat_drop$tobacco_p
#Number of Control Obs
nC <- length(D[D==0])
nT <- length(D[D==1])
par(mfrow = c(3,2))
for(adj in c(0.1,0.25,0.5,1,2,10)){
# Define Bandwidth
h0 <- density(y)$bw
bw_adjust <- adj
h <- h0*bw_adjust
# Control & Treatment Densities
Cdens <- density(y[D==0], adjust = bw_adjust)
Tdens <- density(y[D==1], adjust = bw_adjust)
#Plot densities
plot(Cdens, col = "blue", main = paste0("Bandwidth = ",round(h,2),"g"), xlab = "grams")
lines(Tdens, col = "red")
legend('topright', legend = c("Control", "Treated"), col = c("blue", "red"), lty = 1)
}
h0 <- density(y)$bw
bw_adjust <- 1
h <- h0*bw_adjust
# Control & Treatment Densities
Cdens <- density(y[D==0], adjust = bw_adjust)
Tdens <- density(y[D==1], adjust = bw_adjust)
#Plot densities
plot(Cdens, col = "blue", main = paste0("Kernal Densities of Birthweight (Bandwidth = ",round(h,2),"g)"), xlab = "grams")
lines(Tdens, col = "red")
legend('topright', legend = c("Control", "Treated"), col = c("blue", "red"), lty = 1)
# Uniform kernal function
k.uni <- function(u){
return(ifelse(abs(u) <= 1,0.5,0))
}
# Triangular kernal function
k.tri <- function(u){
return(ifelse(abs(u) < 1,1-abs(u),0))
}
# Epanechnikov kernal function
k.epan <- function(u){
return(ifelse(abs(u) < 1,0.75*(1-u^2),0))
}
# Gaussian kernal function
k.gauss <- function(u){
return((1/sqrt(2*pi))*exp(-0.5*u^2))
}
# Kernal Density Estimator for Control Group
k.dens.C <- function(ystar, k.func){
ks <- rep(NA,nC)
for(i in 1:n){
u <- (ystar - y[i])/h
ks[i] <- k.func(u)
}
return((1/(nC*h))*(sum(ks)))
}
# Kernal Density Estimator for Treatment Group
k.dens.T <- function(ystar, k.func){
ks <- rep(NA,nT)
for(i in 1:n){
u <- (ystar - y[i])/h
ks[i] <- k.func(u)*(1-D[i])/(1-pX[i])
}
return((1/(nT*h))*(sum(ks)))
}
h <- density(y)$bw
est.uni.C <- k.dens.C(3000,k.func = k.uni) %>% round(6)
est.tri.C <- k.dens.C(3000,k.func = k.tri) %>% round(6)
est.epan.C <- k.dens.C(3000,k.func = k.epan) %>% round(6)
est.gauss.C <- k.dens.C(3000,k.func = k.gauss) %>% round(6)
est.uni.T <- k.dens.T(3000,k.func = k.uni) %>% round(6)
# Uniform kernal function
k.uni <- function(u){
return(ifelse(abs(u) <= 1,0.5,0))
}
# Triangular kernal function
k.tri <- function(u){
return(ifelse(abs(u) < 1,1-abs(u),0))
}
# Epanechnikov kernal function
k.epan <- function(u){
return(ifelse(abs(u) < 1,0.75*(1-u^2),0))
}
# Gaussian kernal function
k.gauss <- function(u){
return((1/sqrt(2*pi))*exp(-0.5*u^2))
}
# Kernal Density Estimator for Control Group
k.dens.C <- function(ystar, k.func){
ks <- rep(NA,nC)
for(i in 1:n){
u <- (ystar - y[i])/h
ks[i] <- k.func(u)*(1-D[i])/(1-dat_drop$p.hat_2[i])
}
return((1/(nC*h))*(sum(ks)))
}
# Kernal Density Estimator for Treatment Group
k.dens.T <- function(ystar, k.func){
ks <- rep(NA,nT)
for(i in 1:n){
u <- (ystar - y[i])/h
ks[i] <- k.func(u)*(D[i]/dat_drop$p.hat_2[i])
}
return((1/(nT*h))*(sum(ks)))
}
h <- density(y)$bw
est.uni.C <- k.dens.C(3000,k.func = k.uni) %>% round(6)
est.tri.C <- k.dens.C(3000,k.func = k.tri) %>% round(6)
est.epan.C <- k.dens.C(3000,k.func = k.epan) %>% round(6)
est.gauss.C <- k.dens.C(3000,k.func = k.gauss) %>% round(6)
est.uni.T <- k.dens.T(3000,k.func = k.uni) %>% round(6)
est.tri.T <- k.dens.T(3000,k.func = k.tri) %>% round(6)
est.epan.T <- k.dens.T(3000,k.func = k.epan) %>% round(6)
est.gauss.T <- k.dens.T(3000,k.func = k.gauss) %>% round(6)
est.df <- data.frame(Kernal = c("Uniform","Triangular","Epanechnikov","Gaussian"), NonSmoker = c(est.uni.C,est.tri.C,est.epan.C,est.gauss.C),Smoker = c(est.uni.T,est.tri.T,est.epan.T,est.gauss.T))
kable(est.df, caption = "Kernal Estimates for Birthweight of 3000g")
